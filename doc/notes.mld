
{0 Design notes}

- No arbitrary getter/setter on mutable fields and changing them makes
  a new reader/writer (not in the applicative sense, we don't deal
  with purely functional structures). This is by design so that reader
  and writer filters part a composition can't fiddle with these
  fields.

- We settle on [length]s rather than [sizes] because that's what
  the [Stdlib] generally uses.

- We use [first], [last] and [length] for slice indexing and [pos],
  [parent_pos] for streams. That way the terminology does not overlap
  which makes it for a clearer exposition.

- The design tries to enforce well formed streams. For example no
  spurious empty slices (they terminate streams), or calls to
  enumerators and iterators after eod.

- In {!Bytes.Slice} we make sure that users are made aware that they
  may produce {!Slice.eod} in the names since producing or pushing
  them terminate streams.
